name: Terraform CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      planfile:
        description: 'Path to the Terraform plan file'
        required: false
        default: 'planfile'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "us-east-1"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init -backend-config="tfstate.config"

      - name: Terraform Validate
        run: terraform validate

  plan:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init -backend-config="tfstate.config"

      - name: Terraform Plan
        run: |
          terraform plan -out="${{ github.event.inputs.planfile }}"
          echo "::set-output name=planfile::${{ github.event.inputs.planfile }}"
        env:
          TF_CLI_ARGS: "-input=false"
      
      - name: Save Planfile as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan
          path: ${{ github.event.inputs.planfile }}

  apply:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch'
    needs: plan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Planfile
        uses: actions/download-artifact@v2
        with:
          name: terraform-plan
          path: ${{ github.event.inputs.planfile }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Apply
        run: |
          terraform apply -input=false "${{ github.event.inputs.planfile }}"
        env:
          CONFIRM_APPLY: true

  destroy:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Destroy
        run: |
          terraform destroy --auto-approve
        env:
          CONFIRM_DESTROY: true
