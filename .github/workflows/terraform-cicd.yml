name: Terraform CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "us-east-1"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init -backend-config="tfstate.config"

    - name: Terraform Validate
      run: terraform validate

  plan:
    runs-on: ubuntu-latest
    needs: validate
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init -backend-config="tfstate.config"

    - name: Terraform Plan
      run: terraform plan -out=tfplan

  apply:
    runs-on: ubuntu-latest
    needs: plan
    if: github.event_name == 'push'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init -backend-config="tfstate.config"

    - name: Terraform Apply
      run: terraform apply -input=false $GITHUB_WORKSPACE/tfplan

  destroy:
    runs-on: ubuntu-latest
    needs: apply
    if: github.event_name == 'push'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init -backend-config="tfstate.config"

    - name: Terraform Destroy
      run: terraform destroy --auto-approve
